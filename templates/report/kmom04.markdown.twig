Kmom03
=====


Berätta hur du upplevde att skriva kod som testar annan kod med PHPUnit och hur du upplever phpunit rent allmänt.

Jag tycker det gick bra att komma igång med phpunit, kodtestning är något vi håller på med i systemveriferingskursen så det är bra att få testa och jobba mer praktiskt, något jag missat då jag inte läst den här kursen innan systemveriferingen, även mer kunskap från föreläsningar kring hur man jobbar metodiskt kring testning av kod och vad som är bra testbar kod.

Jag tycker phpunit erbjud bra info kring vad som täcks och kombinerar man detta med skriva ut detta i html i coverage mappen så kan man presentera det hela på ett snyggt sätt.

Hur väl lyckades du med kodtäckningen av din kod, lyckades du nå mer än 90% kodtäckning?

Jag tycker jag att jag fick en rimligt kodtäckning kring koden för spelet 21. Det blev 5 olika testklasser där jag får 100% täckning på 4 utav de 5 klasserna och även täcker metoderna som används för spelet 21.


Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?

Jobbade efter föreläsningarna som gav en bra grund, se över dokumentationen men mycket från youtube då jag tycker det är enklare att ta till sig när någon förklarar kombinerat med praktiska exempel på kodtestning.

Upplever du din egen kod som “testbar kod” eller finns det delar i koden som är mer eller mindre testbar och finns det saker som kan göras för att förbättra kodens testbarhet?

Jag skulle vilja säga att min kod är hyffsat testbar utifrån de resultat som phpunit presenterar.

Valde du att skriva om delar av din kod för att förbättra den eller göra den mer testbar, om så berätta lite hur du tänkte.

Fick tillägga lite på på en klass för att kunna köra testerna där vissa värden av korten ska presenteras, tex ifall spelaren eller banken vinner och vilket resultat som förväntas bli etc.

Fundera över om du anser att testbar kod är något som kan identifiera “snygg och ren kod”.

Om koden skrivs så den är testbar så tror jag att det kraftigt påverkar kodens struktur och skulle nog anses av de flesta som "snygg kod" även om det är andra faktorerar som påverkar, tex läsbarhet för andra utvecklare och för en själv.

Vilken är din TIL för detta kmom?

Polleten trillar ned av praktiska exempel än sitta och plöjja teori.
